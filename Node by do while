#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    if (!newNode) {
        printf("Memory allocation failed!\n");
        exit(1);
    }
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}
void displayList(struct Node* head) {
    if (head == NULL) {
        printf("The list is empty.\n");
        return;
    }
    struct Node* current = head;
    printf("Linked List: ");
    do {
        printf("%d -> ", current->data);
        current = current->next;
    } while (current != NULL);
    printf("NULL\n");
}
int main() {
    struct Node *head = NULL, *temp = NULL, *newNode = NULL;
    int choice;
    printf("Create a linked list:\n");
    do {
        int data;
        printf("Enter data for the node: ");
        scanf("%d", &data);
        newNode = createNode(data);
        if (head == NULL) {
            head = newNode; // First node
        } else {
            temp->next = newNode; 
        }
        temp = newNode; 
        printf("Do you want to add another node? (1 for Yes, 0 for No): ");
        scanf("%d", &choice);
    } while (choice == 1);
    printf("\n");
    displayList(head);
    struct Node* current = head;
    do {
        struct Node* nextNode = current->next;
        free(current);
        current = nextNode;
    } while (current != NULL);
    printf("Memory freed, program finished.\n");
    return 0;
}
